[project]
name = "cate"
version = "0.1.0"
description = "causal inference research"
readme = "README.md"
requires-python = ">=3.11,<3.12"
dependencies = [
    "causalml>=0.15.2",
    "click>=8.1.7",
    "hydra-core>=1.3.2",
    "ipywidgets>=8.1.5",
    "kaggle>=1.6.17",
    "lightgbm>=4.5.0",
    "matplotlib>=3.10.0",
    "mlflow>=2.19.0",
    "pandas>=2.2.3",
    "polars>=1.17.1",
    "pynvml>=12.0.0",
    "scikit-learn>=1.6.0",
    "scikit-uplift>=0.5.1",
    "scipy>=1.14.1",
    "torch>=2.5.1",
]

[tool.hatch.build.targets.wheel]
packages = ["cate", "process"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
lint = [
    "mypy>=1.14.0",
    "pylint>=3.3.2",
    "pytest-coverage>=0.0",
    "pytest>=8.3.4",
    "ruff>=0.8.4",
]
env = [
    "boto3>=1.35.86",
    "ipykernel>=6.29.5",
    "line-bot-sdk>=3.14.2",
    "slack-sdk>=3.34.0",
]

[tool.uv]
default-groups = ["lint", "env"]


[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 88
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "W", "B", "I"]
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.mccabe]
max-complexity = 5

[tool.ruff.lint.per-file-ignores]
"dev/*" = ["E", "F", "W", "B"]

[tool.ruff.lint.isort]
case-sensitive = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.mypy]
exclude = [".venv", ".github", "data", "docs", "env", "outputs", "poetry.lock"]
python_version = "3.11"
strict = true
disallow_any_decorated = false
disallow_any_unimported = false
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_unreachable = true
plugins = ["numpy.typing.mypy_plugin"]

[tool.pytest.ini_options]
addopts = ['--rootdir=tests', '--strict-config', '--cov=cate', '-ra']
testpaths = ['tests']
cache_dir = "tests/.pytest_cache"
filterwarnings = ["ignore::pydantic.PydanticDeprecatedSince20"]

[tool.coverage.run]
branch = true
omit = ["**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING",
    "if __name__ == .__main__.",
]

[tool.coverage.xml]
output = "docs/coverage/coverage.xml"

[tool.coverage.html]
directory = "docs/coverage/report"

[tool.pyright]
include = ["dev", "cate", "tests", "process"]
exclude = [
    "data",
    "docs",
    ".venv",
    "outputs",
    "**/traces",
    "**/traces_ts",
    "**/example_files**",
    "**/.pkl",
    "**/bazel-bin",
    "**/bazel",
    "apps/**",
    "**/resources/**",
    "**/tests/**",
    "**/node_modules",
    "**/.next",
    "**/__pycache__",
    "**/.coverage/**",
    "**/.git",
    "**/dist/**",
    "**/build/**",
    "**/.husky",
    "**/migrations",
]
ignore = [
    "**/node_modules",
    "**/__pycache__",
    "**/.*",
    "**/dist",
    "**/.vscode",
    "**/*.pyi",
    "**/__init__.py",
]
typeCheckingMode = "basic"

[tool.pylint]
ignore-paths = [".venv", ".github", "data", "docs", "env", "outputs"]
max-line-length = 88
