{
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true,
        ".coverage": true,
        ".mypy_cache": true,
        ".pytest_cache": true,
        ".ruff_cache": true,
        "tests/.pytest_cache": true,
        ".venv": false,
        ".dmypy.json": true,
    },
    "python.testing.unittestEnabled": false,
    "python.testing.pytestEnabled": true,
    "python.testing.autoTestDiscoverOnSaveEnabled": true,
    "python.testing.pytestArgs": [
        "--cov=cate",
        "--cov-report",
        "xml",
        "--cov-report",
        "html",
        "-ra"
    ],
    "coverage-gutters.showGutterCoverage": true,
    "coverage-gutters.showLineCoverage": true,
    "coverage-gutters.showRulerCoverage": true,
    "markdownlint.config": {
        "MD024": false,
    },
    "commit-message-editor.staticTemplate": [
        "feat: Short description",
        "",
        "Message body",
        "",
        "Message footer"
    ],
    "commit-message-editor.dynamicTemplate": [
        "{type}{scope}: {description}",
        "",
        "{body}",
        "",
        "{breaking_change}{footer}"
    ],
    "commit-message-editor.tokens": [
        {
            "label": "Type",
            "name": "type",
            "type": "enum",
            "options": [
                {
                    "label": "---",
                    "value": ""
                },
                {
                    "label": "build",
                    "description": "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)"
                },
                {
                    "label": "chore",
                    "description": "Updating grunt tasks etc; no production code change"
                },
                {
                    "label": "ci",
                    "description": "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)"
                },
                {
                    "label": "docs",
                    "description": "Documentation only changes"
                },
                {
                    "label": "feat",
                    "description": "A new feature"
                },
                {
                    "label": "fix",
                    "description": "A bug fix"
                },
                {
                    "label": "perf",
                    "description": "A code change that improves performance"
                },
                {
                    "label": "refactor",
                    "description": "A code change that neither fixes a bug nor adds a feature"
                },
                {
                    "label": "revert"
                },
                {
                    "label": "style",
                    "description": "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"
                },
                {
                    "label": "test",
                    "description": "Adding missing tests or correcting existing tests"
                }
            ],
            "description": "Type of changes"
        },
        {
            "label": "Scope",
            "name": "scope",
            "description": "A scope may be provided to a commitâ€™s type, to provide additional contextual information and is contained within parenthesis, e.g., \"feat(parser): add ability to parse arrays\".",
            "type": "text",
            "multiline": false,
            "prefix": "(",
            "suffix": ")"
        },
        {
            "label": "Short description",
            "name": "description",
            "description": "Short description in the subject line.",
            "type": "text",
            "multiline": false
        },
        {
            "label": "Body",
            "name": "body",
            "description": "Optional body",
            "type": "text",
            "multiline": true,
            "lines": 5,
            "maxLines": 10
        },
        {
            "label": "Breaking change",
            "name": "breaking_change",
            "type": "boolean",
            "value": "BREAKING CHANGE: ",
            "default": false
        },
        {
            "label": "Footer",
            "name": "footer",
            "description": "Optional footer",
            "type": "text",
            "multiline": true
        }
    ],
    "github.copilot.enable": {
        "markdown": true
    }
}